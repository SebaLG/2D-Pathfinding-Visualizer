{"version":3,"sources":["index.css","components/Node/Node.css","components/PickAlgorithm/PickAlgorithm.css","components/Layout/Navbar.css","components/Grid.css","components/Node/Node.jsx","components/PickAlgorithm/PickAlgorithm.jsx","components/Layout/Navbar.jsx","utils/animation.js","algorithms/dijkstra.js","utils/constants.js","factory/GridFactory.js","components/Grid.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Node","row","col","isFinish","isStart","isWall","onMouseDown","onMouseEnter","onMouseLeave","extraClassName","id","className","PickAlgorithm","class","type","name","checked","for","data-hover","disabled","Navbar","onClickVisualization","onClickClear","src","process","alt","onClick","title","icon","faPlay","faTimes","Animation","visitedNodesInOrder","nodesInShortestPathOrder","i","length","setTimeout","animateShortestPath","node","document","getElementById","visualizeDijkstra","grid","startNode","finishNode","startNodeVisualization","finishNodeVisualization","distance","unvisitedNodes","getAllNodes","sortNodesByDistance","closestNode","shift","Infinity","isVisited","push","updateUnvisitedNeighbors","dijkstra","currentNode","unshift","previousNode","getNodesInShortestPathOrder","animateDijkstra","nodes","sort","nodeA","nodeB","unvisitedNeighbors","getUnvisitedNeighbors","neighbor","neighbors","filter","Constants","ROWS_NUMBER","COLUMNS_NUMBER","START_NODE_ROW","START_NODE_COL","FINISH_NODE_ROW","FINISH_NODE_COL","GridFactory","getInitialGrid","currentRow","createNode","clearGrid","getNewGridWithWallToggled","newGrid","slice","newNode","getNewGridWithStarNode","leaveTheNode","getNewGridWithFinishNode","Grid","useState","isMoving","setStartNode","setFinishNode","isMousePressed","setIsMousePressed","setGrid","onMouseUp","map","rowIdx","key","nodeIdx","mouseIsPressed","nodeClicked","handleMouseDown","handleMouseEnter","handleMouseLeave","href","App","isMobile","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bfbfaf04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"node-border-color\":\"#f75e73\",\"node-shortest-path-color\":\"#e9a05bb7\",\"node-wall-color\":\"#424557\",\"node-shortest-path-border-color\":\"#f07731e3\",\"btn-gradient-primary-color\":\"#cf4759a8\",\"btn-gradient-secondary-color\":\"#df9062e3\",\"grid-background-color\":\"#1f2029\",\"navbar-background-color\":\"#353746\",\"node-visited-background-color-0\":\"#3d1c3c9f\",\"node-visited-background-color-50\":\"#9c264b9f\",\"node-visited-background-color-75\":\"#d8445873\",\"node-visited-background-color-100\":\"#ec667871\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"node-border-color\":\"#f75e73\",\"node-shortest-path-color\":\"#e9a05bb7\",\"node-wall-color\":\"#424557\",\"node-shortest-path-border-color\":\"#f07731e3\",\"btn-gradient-primary-color\":\"#cf4759a8\",\"btn-gradient-secondary-color\":\"#df9062e3\",\"grid-background-color\":\"#1f2029\",\"navbar-background-color\":\"#353746\",\"node-visited-background-color-0\":\"#3d1c3c9f\",\"node-visited-background-color-50\":\"#9c264b9f\",\"node-visited-background-color-75\":\"#d8445873\",\"node-visited-background-color-100\":\"#ec667871\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"node-border-color\":\"#f75e73\",\"node-shortest-path-color\":\"#e9a05bb7\",\"node-wall-color\":\"#424557\",\"node-shortest-path-border-color\":\"#f07731e3\",\"btn-gradient-primary-color\":\"#cf4759a8\",\"btn-gradient-secondary-color\":\"#df9062e3\",\"grid-background-color\":\"#1f2029\",\"navbar-background-color\":\"#353746\",\"node-visited-background-color-0\":\"#3d1c3c9f\",\"node-visited-background-color-50\":\"#9c264b9f\",\"node-visited-background-color-75\":\"#d8445873\",\"node-visited-background-color-100\":\"#ec667871\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"node-border-color\":\"#f75e73\",\"node-shortest-path-color\":\"#e9a05bb7\",\"node-wall-color\":\"#424557\",\"node-shortest-path-border-color\":\"#f07731e3\",\"btn-gradient-primary-color\":\"#cf4759a8\",\"btn-gradient-secondary-color\":\"#df9062e3\",\"grid-background-color\":\"#1f2029\",\"navbar-background-color\":\"#353746\",\"node-visited-background-color-0\":\"#3d1c3c9f\",\"node-visited-background-color-50\":\"#9c264b9f\",\"node-visited-background-color-75\":\"#d8445873\",\"node-visited-background-color-100\":\"#ec667871\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"node-border-color\":\"#f75e73\",\"node-shortest-path-color\":\"#e9a05bb7\",\"node-wall-color\":\"#424557\",\"node-shortest-path-border-color\":\"#f07731e3\",\"btn-gradient-primary-color\":\"#cf4759a8\",\"btn-gradient-secondary-color\":\"#df9062e3\",\"grid-background-color\":\"#1f2029\",\"navbar-background-color\":\"#353746\",\"node-visited-background-color-0\":\"#3d1c3c9f\",\"node-visited-background-color-50\":\"#9c264b9f\",\"node-visited-background-color-75\":\"#d8445873\",\"node-visited-background-color-100\":\"#ec667871\"};","import React from \"react\";\r\n\r\nimport \"./Node.css\";\r\n\r\nconst Node = ({row, col, isFinish, isStart, isWall, onMouseDown, onMouseEnter, onMouseLeave}) => {\r\n  const extraClassName = isFinish\r\n    ? \"node-finish\"\r\n    : isStart\r\n    ? \"node-start\"\r\n    : isWall\r\n    ? \"node-wall\"\r\n    : \"\";\r\n\r\n  return (\r\n    <div\r\n      id={`node-${row}-${col}`}\r\n      className={`node ${extraClassName}`}\r\n      onMouseDown={() => onMouseDown(row, col)}\r\n      onMouseEnter={() => onMouseEnter(row, col)}\r\n      onMouseLeave={() => onMouseLeave(row, col)}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Node;\r\n","import React from \"react\";\r\n\r\nimport \"./PickAlgorithm.css\";\r\n\r\nconst PickAlgorithm = () => {\r\n\r\n  return (\r\n<div class=\"section over-hide\">\r\n\t\t\t\t<div class=\"row justify-content-center \">\r\n\t\t\t\t\t<div class=\"col-xl-10 pb-5\">\r\n\t\t\t\t\t\t<input class=\"checkbox-budget\" type=\"radio\" name=\"budget\" id=\"budget-1\" checked/>\r\n\t\t\t\t\t\t<label class=\"for-checkbox-budget\" for=\"budget-1\">\r\n\t\t\t\t\t\t\t<span data-hover=\"Dijkstra\">Dijkstra</span>\r\n\t\t\t\t\t\t</label><input class=\"checkbox-budget\"  disabled=\"disabled\" type=\"radio\" name=\"budget\" id=\"budget-2\"/>\r\n\t\t\t\t\t\t<label class=\"for-checkbox-budget\" for=\"budget-2\">\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<span data-hover=\"A* (A-Star) \">A*  (A-Star)</span>\r\n\t\t\t\t\t\t</label><input class=\"checkbox-budget\"  disabled=\"disabled\" type=\"radio\" name=\"budget\" id=\"budget-3\"/>\r\n\t\t\t\t\t\t<label class=\"for-checkbox-budget\" for=\"budget-3\">\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<span data-hover=\"Breadth First Search\">Breadth First</span>\r\n\t\t\t\t\t\t</label><input class=\"checkbox-budget\"  disabled=\"disabled\" type=\"radio\" name=\"budget\" id=\"budget-4\"/>\r\n\t\t\t\t\t\t<label class=\"for-checkbox-budget\" for=\"budget-4\">\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<span data-hover=\"Depth First\">Depth First</span>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t</div>\r\n  );\r\n};\r\n\r\nexport default PickAlgorithm;","import React from \"react\";\r\nimport \"./Navbar.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlay, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navbar = ({ onClickVisualization, onClickClear }) => {\r\n  return (\r\n    <div className=\"App-header\">\r\n      <div className=\"logo\">\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/finditLogo.svg\"}\r\n          className=\"d-inline-block align-top\"\r\n          alt=\"FindIT\"\r\n        />\r\n        <h3>\r\n          <strong>&nbsp;&nbsp;FindIT</strong>\r\n        </h3>\r\n      </div>\r\n\r\n      <div className=\"btn-group-vertical floating-buttons\">\r\n        <button\r\n          onClick={() => onClickVisualization()}\r\n          className=\"btn-danger btn-visualization\"\r\n          title='Start'\r\n        >\r\n          <FontAwesomeIcon icon={faPlay} />\r\n        </button>\r\n        <button\r\n          onClick={() => onClickClear()}\r\n          className=\"btn-secondary btn-clear\"\r\n          title='Clear'\r\n        >\r\n          <FontAwesomeIcon icon={faTimes} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\n/**<div className=\" mx-auto\">\r\n        <button\r\n          onClick={() => onClickVisualization()}\r\n          className=\"btn btn-danger btn-visualization\"\r\n        >\r\n          Visualize\r\n        </button>\r\n        <button\r\n          onClick={() => onClickClear()}\r\n          className=\"btn btn-secondary btn-clear\"\r\n        >\r\n          Clear\r\n        </button>\r\n      </div>**/\r\n","\r\nexport default class Animation{\r\n\r\n     static animateDijkstra  (visitedNodesInOrder, nodesInShortestPathOrder) {\r\n        for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n          if (i === visitedNodesInOrder.length) {\r\n            setTimeout(() => {\r\n              this.animateShortestPath(nodesInShortestPathOrder);\r\n            }, 10 * i);\r\n            return;\r\n          }\r\n          setTimeout(() => {\r\n            const node = visitedNodesInOrder[i];\r\n            document.getElementById(`node-${node.row}-${node.col}`).className =\r\n              'node node-visited';\r\n          }, 10 * i);\r\n        }\r\n      }\r\n    \r\n      static animateShortestPath (nodesInShortestPathOrder) {\r\n        for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\r\n          setTimeout(() => {\r\n            const node = nodesInShortestPathOrder[i];\r\n            document.getElementById(`node-${node.row}-${node.col}`).className =\r\n              'node node-shortest-path';\r\n          }, 50 * i);\r\n        }\r\n      }\r\n    \r\n\r\n\r\n}\r\n\r\n","import Animation from \"../utils/animation.js\";\r\n\r\n// Performs Dijkstra's visualization\r\nexport function visualizeDijkstra(grid, startNode, finishNode) {\r\n  const startNodeVisualization = grid[startNode.row][startNode.col];\r\n  const finishNodeVisualization = grid[finishNode.row][finishNode.col];\r\n  const visitedNodesInOrder = dijkstra(\r\n    grid,\r\n    startNodeVisualization,\r\n    finishNodeVisualization\r\n  );\r\n  const nodesInShortestPathOrder = getNodesInShortestPathOrder(\r\n    finishNodeVisualization\r\n  );\r\n  Animation.animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\r\n}\r\n\r\n// Performs Dijkstra's algorithm; returns *all* nodes in the order\r\n// in which they were visited. Also makes nodes point back to their\r\n// previous node, effectively allowing us to compute the shortest path\r\n// by backtracking from the finish node.\r\nexport function dijkstra(grid, startNode, finishNode) {\r\n  const visitedNodesInOrder = [];\r\n  startNode.distance = 0;\r\n  const unvisitedNodes = getAllNodes(grid);\r\n  while (!!unvisitedNodes.length) {\r\n    sortNodesByDistance(unvisitedNodes);\r\n    const closestNode = unvisitedNodes.shift();\r\n    // If we encounter a wall, we skip it.\r\n    if (closestNode.isWall) continue;\r\n    // If the closest node is at a distance of infinity,\r\n    // we must be trapped and should therefore stop.\r\n    if (closestNode.distance === Infinity) return visitedNodesInOrder;\r\n    closestNode.isVisited = true;\r\n    visitedNodesInOrder.push(closestNode);\r\n    if (closestNode === finishNode) return visitedNodesInOrder;\r\n    updateUnvisitedNeighbors(closestNode, grid);\r\n  }\r\n}\r\n\r\n// Backtracks from the finishNode to find the shortest path.\r\n// Only works when called *after* the dijkstra method above.\r\nexport function getNodesInShortestPathOrder(finishNode) {\r\n  const nodesInShortestPathOrder = [];\r\n  let currentNode = finishNode;\r\n  while (currentNode !== null) {\r\n    nodesInShortestPathOrder.unshift(currentNode);\r\n    currentNode = currentNode.previousNode;\r\n  }\r\n  return nodesInShortestPathOrder;\r\n}\r\n\r\nconst getAllNodes = (grid) => {\r\n  const nodes = [];\r\n  for (const row of grid) {\r\n    for (const node of row) {\r\n      nodes.push(node);\r\n    }\r\n  }\r\n  return nodes;\r\n};\r\n\r\nconst sortNodesByDistance = (unvisitedNodes) => {\r\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\r\n};\r\n\r\nconst updateUnvisitedNeighbors = (node, grid) => {\r\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\r\n  for (const neighbor of unvisitedNeighbors) {\r\n    neighbor.distance = node.distance + 1;\r\n    neighbor.previousNode = node;\r\n  }\r\n};\r\n\r\nconst getUnvisitedNeighbors = (node, grid) => {\r\n  const neighbors = [];\r\n  const { col, row } = node;\r\n  if (row > 0) neighbors.push(grid[row - 1][col]);\r\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n  if (col > 0) neighbors.push(grid[row][col - 1]);\r\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n  return neighbors.filter((neighbor) => !neighbor.isVisited);\r\n};\r\n","export default class Constants {\r\n  static ROWS_NUMBER = 18;\r\n  static COLUMNS_NUMBER = 40;\r\n\r\n  static START_NODE_ROW = 8;\r\n  static START_NODE_COL = 10;\r\n  static FINISH_NODE_ROW = 8;\r\n  static FINISH_NODE_COL = 30;\r\n}\r\n","import Constants from \"../utils/constants\";\r\n\r\nexport default class GridFactory {\r\n  static getInitialGrid = (startNode, finishNode) => {\r\n    const grid = [];\r\n    for (let row = 0; row < Constants.ROWS_NUMBER; row++) {\r\n      const currentRow = [];\r\n      for (let col = 0; col < Constants.COLUMNS_NUMBER; col++) {\r\n        currentRow.push(this.createNode(col, row, startNode, finishNode));\r\n      }\r\n      grid.push(currentRow);\r\n    }\r\n    return grid;\r\n  };\r\n\r\n  static clearGrid = (startNode, finishNode) => {\r\n    const grid = [];\r\n    for (let row = 0; row < Constants.ROWS_NUMBER; row++) {\r\n      const currentRow = [];\r\n      for (let col = 0; col < Constants.COLUMNS_NUMBER; col++) {\r\n        currentRow.push(this.createNode(col, row, startNode, finishNode));\r\n        if (col === startNode.col && row === startNode.row) {\r\n          document.getElementById(`node-${row}-${col}`).className =\r\n            \"node node-start\";\r\n        } else if (col === finishNode.col && row === finishNode.row) {\r\n          document.getElementById(`node-${row}-${col}`).className =\r\n            \"node node-finish\";\r\n        } else {\r\n          document.getElementById(`node-${row}-${col}`).className = \"node\";\r\n        }\r\n      }\r\n      grid.push(currentRow);\r\n    }\r\n    return grid;\r\n  };\r\n\r\n  static getNewGridWithWallToggled = (grid, row, col) => {\r\n    const newGrid = grid.slice();\r\n    const node = newGrid[row][col];\r\n    const newNode = {\r\n      ...node,\r\n      isWall: !node.isWall,\r\n    };\r\n    newGrid[row][col] = newNode;\r\n    return newGrid;\r\n  };\r\n\r\n  static getNewGridWithStarNode = (grid, row, col, leaveTheNode) => {\r\n    const newGrid = grid.slice();\r\n    const node = newGrid[row][col];\r\n    const newNode = {\r\n      ...node,\r\n      isStart: !leaveTheNode,\r\n      isWall: false,\r\n    };\r\n    newGrid[row][col] = newNode;\r\n    return newGrid;\r\n  };\r\n\r\n  static getNewGridWithFinishNode = (grid, row, col, leaveTheNode) => {\r\n    const newGrid = grid.slice();\r\n    const node = newGrid[row][col];\r\n    const newNode = {\r\n      ...node,\r\n      isFinish: !leaveTheNode,\r\n      isWall: false,\r\n    };\r\n    newGrid[row][col] = newNode;\r\n    return newGrid;\r\n  };\r\n\r\n  static createNode = (col, row, startNode, finishNode) => {\r\n    return {\r\n      col,\r\n      row,\r\n      isStart: row === startNode.row && col === startNode.col,\r\n      isFinish: row === finishNode.row && col === finishNode.col,\r\n      distance: Infinity,\r\n      isVisited: false,\r\n      isWall: false,\r\n      previousNode: null,\r\n    };\r\n  };\r\n}\r\n","import React, { Fragment, useState } from \"react\";\r\nimport Node from \"./Node/Node\";\r\nimport PickAlgorithm from \"./PickAlgorithm/PickAlgorithm\";\r\nimport Navbar from \"./Layout/Navbar\";\r\nimport { visualizeDijkstra } from \"../algorithms/dijkstra\";\r\n\r\nimport GridFactory from \"../factory/GridFactory\";\r\nimport Constants from \"../utils/constants\";\r\n\r\nimport \"./Grid.css\";\r\n\r\nconst Grid = () => {\r\n  const [startNode, setStartNode] = useState({\r\n    row: Constants.START_NODE_ROW,\r\n    col: Constants.START_NODE_COL,\r\n    isMoving: false,\r\n  });\r\n  const [finishNode, setFinishNode] = useState({\r\n    row: Constants.FINISH_NODE_ROW,\r\n    col: Constants.FINISH_NODE_COL,\r\n    isMoving: false,\r\n  });\r\n  const [isMousePressed, setIsMousePressed] = useState(false);\r\n\r\n  const [grid, setGrid] = useState(\r\n    GridFactory.getInitialGrid(startNode, finishNode)\r\n  );\r\n\r\n  const handleMouseDown = (row, col) => {\r\n    setIsMousePressed(true);\r\n    let nodeClicked = grid[row][col];\r\n    if (nodeClicked.isStart) {\r\n      setStartNode({ ...startNode, isMoving: true });\r\n    } else if (nodeClicked.isFinish) {\r\n      setFinishNode({ ...finishNode, isMoving: true });\r\n    } else {\r\n      const newGrid = GridFactory.getNewGridWithWallToggled(grid, row, col);\r\n      setGrid(newGrid);\r\n    }\r\n  };\r\n\r\n  const handleMouseEnter = (row, col) => {\r\n    if (!isMousePressed) return;\r\n    if (startNode.isMoving) {\r\n      setGrid(GridFactory.getNewGridWithStarNode(grid, row, col, false));\r\n      setStartNode({ ...startNode, row, col });\r\n    } else if (finishNode.isMoving) {\r\n      setGrid(GridFactory.getNewGridWithFinishNode(grid, row, col, false));\r\n      setFinishNode({ ...finishNode, row, col });\r\n    } else {\r\n      setGrid(GridFactory.getNewGridWithWallToggled(grid, row, col));\r\n    }\r\n  };\r\n\r\n  const handleMouseLeave = (row, col) => {\r\n    if (!isMousePressed) return;\r\n    let newGrid;\r\n    if (startNode.isMoving) {\r\n      newGrid = GridFactory.getNewGridWithStarNode(grid, row, col, true);\r\n      setGrid(newGrid);\r\n    } else if (finishNode.isMoving) {\r\n      newGrid = GridFactory.getNewGridWithFinishNode(\r\n        grid,\r\n        row,\r\n        col,\r\n        true\r\n      );\r\n      setGrid(newGrid);\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setIsMousePressed(false);\r\n    setStartNode({ ...startNode, isMoving: false });\r\n    setFinishNode({ ...finishNode, isMoving: false });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar\r\n        grid={grid}\r\n        startNode={startNode}\r\n        finishNode={finishNode}\r\n        onClickVisualization={() =>\r\n          visualizeDijkstra(grid, startNode, finishNode)\r\n        }\r\n        onClickClear={() =>\r\n          setGrid(GridFactory.clearGrid(startNode, finishNode))\r\n        }\r\n      ></Navbar>\r\n      <PickAlgorithm></PickAlgorithm>\r\n      <div className=\"grid\" onMouseUp={() => handleMouseUp()}>\r\n        {grid.map((row, rowIdx) => {\r\n          return (\r\n            <div key={rowIdx} className=\"div_node\">\r\n              {row.map((node, nodeIdx) => {\r\n                const { row, col, isFinish, isStart, isWall } = node;\r\n                return (\r\n                  <Node\r\n                    key={nodeIdx}\r\n                    col={col}\r\n                    isFinish={isFinish}\r\n                    isStart={isStart}\r\n                    isWall={isWall}\r\n                    mouseIsPressed={isMousePressed}\r\n                    onMouseDown={(row, col) => handleMouseDown(row, col)}\r\n                    onMouseEnter={(row, col) => handleMouseEnter(row, col)}\r\n                    onMouseLeave={(row, col) => handleMouseLeave(row, col)}\r\n                    row={row}\r\n                  ></Node>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n\r\n         <h5 className=\"created_by\"><a href=\"https://www.linkedin.com/in/sebastian-lopez-garcia/\">Created by Seba López</a></h5>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Grid from \"./components/Grid.jsx\";\r\nimport {isMobile} from 'react-device-detect';\r\n\r\n\r\n\r\nfunction App() {\r\n  if (!isMobile) {\r\n    return (\r\n      <div className=\"App\">\r\n        <Grid></Grid>\r\n      </div>\r\n    );\r\n  }else{\r\n    return (\r\n      <div className=\"mobile-not-available\">\r\n        <h3>This content is unavailable on mobile</h3>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App'; \r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  \r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}